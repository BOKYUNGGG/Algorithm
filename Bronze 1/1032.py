# 시작 -> 실행 -> cmd를 쳐보자. 검정 화면이 눈에 보인다. 
# 여기서 dir이라고 치면 그 디렉토리에 있는 서브디렉토리와 파일이 모두 나온다. 
# 이때 원하는 파일을 찾으려면 다음과 같이 하면 된다.
# dir *.exe라고 치면 확장자가 exe인 파일이 다 나온다. 
# "dir 패턴"과 같이 치면 그 패턴에 맞는 파일만 검색 결과로 나온다. 
# 예를 들어, dir a?b.exe라고 검색하면 
# 파일명의 첫 번째 글자가 a이고, 세 번째 글자가 b이고, 확장자가 exe인 것이 모두 나온다. 
# 이때 두 번째 문자는 아무거나 나와도 된다. 예를 들어, acb.exe, aab.exe, apb.exe가 나온다.

# 이 문제는 검색 결과가 먼저 주어졌을 때, 패턴으로 뭘 쳐야 그 결과가 나오는지를 출력하는 문제이다. 
# 패턴에는 알파벳과 "." 그리고 "?"만 넣을 수 있다. 
# 가능하면 ?을 적게 써야 한다. 
# 그 디렉토리에는 검색 결과에 나온 파일만 있다고 가정하고, 파일 이름의 길이는 모두 같다.

# 입력 요구사항
# 파일 이름의 개수 입력
N = int(input())
# 파일 이름을 N번 만큼 입력
arr = [input() for _ in range(N)] 



# 문자열의 문자를 처음부터 끝까지 
# 배열에서 탐색하면서
# 같지 않은 문자가 있으면 그 자리에 ? 을 대체하고 반복문 탈출

# 문자열은 immutable 특성을 갖으므로 특정 인덱스의 문자를 변경할 수 없다.
# 따라서 result를 따로 저장해야

result = ""
for i in range(len(arr[0])) : # 0 1 2 3 4 5
    for j in range(len(arr)) : # 0 1 2
        if arr[0][i] != arr[j][i] : 
            result += "?"
            break
        
        if j == len(arr)-1 : result += arr[0][i]
        
print(result)

print(''.join(
                [
                    ['?', c[0]][len(set(c)) == 1] 
                        for c in zip(*(input() for _ in range(int(input()))))
                ]
             )
    )